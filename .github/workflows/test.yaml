name: Test
on:
  push:
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm test
        env:
          MEDIAWIKI_FULL_SCRIPT_PATH: https://test.wikipedia.beta.wmcloud.org/w
          MEDIAWIKI_USERNAME: ${{ secrets.MEDIAWIKI_USERNAME }}
          MEDIAWIKI_PASSWORD: ${{ secrets.MEDIAWIKI_PASSWORD }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          OAUTH_NONCONFIDENTIAL_CLIENT_ID: ${{ secrets.OAUTH_NONCONFIDENTIAL_CLIENT_ID }}
          OAUTH_NONCONFIDENTIAL_CLIENT_SECRET: ${{ secrets.OAUTH_NONCONFIDENTIAL_CLIENT_SECRET }}
  test-slow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: |
          cd /var/tmp
          openssl genrsa -out private.key 2048
          openssl rsa -in private.key -pubout -out public.key
      - uses: lucaswerkmeister/setup-mediawiki@v1
        id: setup-mediawiki
        with:
          extensions: |
            OAuth
          local-settings: |
            $wgOAuth2GrantExpirationInterval = 'PT30S';
            $wgGroupPermissions['sysop']['mwoauthproposeconsumer'] = true;
            $wgGroupPermissions['sysop']['mwoauthupdateownconsumer'] = true;
            $wgGroupPermissions['sysop']['mwoauthmanageconsumer'] = true;
            $wgGroupPermissions['sysop']['mwoauthsuppress'] = true;
            $wgGroupPermissions['sysop']['mwoauthviewsuppressed'] = true;
            $wgGroupPermissions['sysop']['mwoauthviewprivate'] = true;
            $wgGroupPermissions['sysop']['mwoauthmanagemygrants'] = true;
            $wgOAuth2PrivateKey = '/var/tmp/private.key';
            $wgOAuth2PublicKey = '/var/tmp/public.key';
      - run: |
          cd -- "$MEDIAWIKI_INSTALL_DIR"

          # OAuth requires the user to have an email address set
          php maintenance/run.php resetUserEmail --no-reset-password "$MEDIAWIKI_USERNAME" 'mail@localhost'

          # regular consumer
          json=$(php maintenance/run.php $PWD/extensions/OAuth/maintenance/createOAuthConsumer.php \
              --oauthVersion=2 \
              --user="$MEDIAWIKI_USERNAME" \
              --name='m3api-oauth2 CI consumer' \
              --version="$(printf '%(%s)T')" \
              --description='OAuth 2.0 consumer to test m3api-oauth2 in CI' \
              --callbackUrl='http://localhost:12345/oauth/callback' \
              --grants=editpage \
              --approve \
              --jsonOnSuccess
          )
          jq -r '"client-id=" + .key + "\nclient-secret=" + .secret' <<< "$json" >> "$GITHUB_OUTPUT"

          # non-confidential consumer
          json=$(php maintenance/run.php $PWD/extensions/OAuth/maintenance/createOAuthConsumer.php \
              --oauthVersion=2 \
              --user="$MEDIAWIKI_USERNAME" \
              --name='m3api-oauth2 CI consumer (non-confidential)' \
              --version="$(printf '%(%s)T')" \
              --description='OAuth 2.0 consumer to test m3api-oauth2 in CI' \
              --callbackUrl='http://localhost:12345/oauth/callback' \
              --grants=editpage \
              --oauth2IsNotConfidential \
              --approve \
              --jsonOnSuccess
          )
          jq -r '"nonconfidential-client-id=" + .key + "\nnonconfidential-client-secret=" + .secret' <<< "$json" >> "$GITHUB_OUTPUT"
        shell: bash
        env:
          MEDIAWIKI_USERNAME: ${{ steps.setup-mediawiki.outputs.admin-username }}
          MEDIAWIKI_INSTALL_DIR: ${{ steps.setup-mediawiki.outputs.install-directory }}
        id: create-oauth-client
      - run: npm ci
      - run: npm run test:integration
        env:
          MEDIAWIKI_FULL_SCRIPT_PATH: ${{ steps.setup-mediawiki.outputs.server }}${{ steps.setup-mediawiki.outputs.script-path }}
          MEDIAWIKI_USERNAME: ${{ steps.setup-mediawiki.outputs.admin-username }}
          MEDIAWIKI_PASSWORD: ${{ steps.setup-mediawiki.outputs.admin-password }}
          OAUTH_CLIENT_ID: ${{ steps.create-oauth-client.outputs.client-id }}
          OAUTH_CLIENT_SECRET: ${{ steps.create-oauth-client.outputs.client-secret }}
          OAUTH_NONCONFIDENTIAL_CLIENT_ID: ${{ steps.create-oauth-client.outputs.nonconfidential-client-id }}
          OAUTH_NONCONFIDENTIAL_CLIENT_SECRET: ${{ steps.create-oauth-client.outputs.nonconfidential-client-secret }}
          SLOW_TEST_SLEEP: 35
  test-package-lock:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm i --package-lock-only
      - run: git diff --exit-code
